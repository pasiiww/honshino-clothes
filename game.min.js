const app=new PIXI.Application({width:window.innerWidth,height:window.innerHeight,backgroundColor:16777215,resizeTo:window});document.getElementById("gameContainer").appendChild(app.view);const layers={background:new PIXI.Container,foreground:new PIXI.Container,hair:new PIXI.Container,body:new PIXI.Container,clothes:new PIXI.Container};const mainContainer=new PIXI.Container;app.stage.addChild(mainContainer);mainContainer.addChild(layers.background);mainContainer.addChild(layers.hair);mainContainer.addChild(layers.body);mainContainer.addChild(layers.clothes);mainContainer.addChild(layers.foreground);const resources={body:["images/body/开心表情+白裤袜.png","images/body/普通表情+白小腿袜.png","images/body/普通表情+裸腿.png","images/body/普通表情+过膝白丝.png","images/body/普通表情+黑裤袜.png","images/body/普通表情+黑过膝.png","images/body/生气表情+白小腿袜.png"],hair:["images/hair/双马尾.png","images/hair/披发.png","images/hair/短发.png","images/hair/高马尾.png"],clothes:["images/clothes/体操服.png","images/clothes/公式服.png","images/clothes/女仆装.png","images/clothes/泳衣.png","images/clothes/鲸鱼服装.png"]};const currentSelection={clothes:0,body:0,hair:0};let originalWidth,originalHeight;let currentScale=1;const headerRatio=.1;async function loadInitialResources(){try{const bodyTexture_=await PIXI.Texture.fromURL(resources.body[0]);originalWidth=bodyTexture_.width;originalHeight=bodyTexture_.height}catch(error){console.error("Failed to load initial texture:",error);originalWidth=800;originalHeight=1200}const targetWidth=window.innerWidth*.9;const targetHeight=window.innerHeight*.8;console.log("Initial target dimensions:",targetWidth,targetHeight);const scaleX=targetWidth/originalWidth;const scaleY=targetHeight/originalHeight;currentScale=Math.min(scaleX,scaleY);mainContainer.scale.set(currentScale);const bounds=mainContainer.getBounds();mainContainer.pivot.set(bounds.width/2,0);mainContainer.position.set(app.screen.width/2,0);try{console.log("Loading compressed background texture: images/background/背景.png");const bgTexture=await PIXI.Texture.fromURL("images/background/背景.png");const bgSprite=new PIXI.Sprite(bgTexture);bgSprite.anchor.set(.5,0);bgSprite.position.set(0,0);bgSprite.scale.set(1);layers.background.addChild(bgSprite);console.log("Compressed background sprite loaded successfully")}catch(error){console.error("Failed to load compressed background texture:",error);try{const bgTexture=await PIXI.Texture.fromURL("images/background/背景.png");const bgSprite=new PIXI.Sprite(bgTexture);bgSprite.anchor.set(.5,0);bgSprite.position.set(0,0);bgSprite.scale.set(.5);layers.background.addChild(bgSprite)}catch(fallbackError){console.error("Failed to load fallback background texture:",fallbackError)}}try{console.log("Loading compressed foreground1 texture: images/background/前景.png");const fg1Texture=await PIXI.Texture.fromURL("images/background/前景.png");const fg1Sprite=new PIXI.Sprite(fg1Texture);fg1Sprite.anchor.set(.5,0);fg1Sprite.position.set(0,0);fg1Sprite.scale.set(1);layers.foreground.addChild(fg1Sprite);console.log("Compressed foreground1 sprite loaded successfully")}catch(error){console.error("Failed to load compressed foreground1 texture:",error);try{const fg1Texture=await PIXI.Texture.fromURL("images/background/前景.png");const fg1Sprite=new PIXI.Sprite(fg1Texture);fg1Sprite.anchor.set(.5,0);fg1Sprite.position.set(0,0);fg1Sprite.scale.set(.5);layers.foreground.addChild(fg1Sprite)}catch(fallbackError){console.error("Failed to load fallback foreground1 texture:",fallbackError)}}try{console.log("Loading compressed foreground2 texture: images/background/前景2.png");const fg2Texture=await PIXI.Texture.fromURL("images/background/前景2.png");const fg2Sprite=new PIXI.Sprite(fg2Texture);fg2Sprite.anchor.set(.5,0);fg2Sprite.position.set(0,0);fg2Sprite.scale.set(1);layers.foreground.addChild(fg2Sprite);console.log("Compressed foreground2 sprite loaded successfully")}catch(error){console.error("Failed to load compressed foreground2 texture:",error);try{const fg2Texture=await PIXI.Texture.fromURL("images/background/前景2.png");const fg2Sprite=new PIXI.Sprite(fg2Texture);fg2Sprite.anchor.set(.5,0);fg2Sprite.position.set(0,0);fg2Sprite.scale.set(.5);layers.foreground.addChild(fg2Sprite)}catch(fallbackError){console.error("Failed to load fallback foreground2 texture:",fallbackError)}}try{console.log("Loading body texture:",resources.body[0]);const bodyTexture=await PIXI.Texture.fromURL(resources.body[0]);const bodySprite=new PIXI.Sprite(bodyTexture);bodySprite.anchor.set(.5,0);bodySprite.position.set(0,0);bodySprite.scale.set(1);layers.body.addChild(bodySprite);console.log("Body sprite loaded successfully")}catch(error){console.error("Failed to load body texture:",error);const fallback=new PIXI.Graphics;fallback.beginFill(16711680);fallback.drawRect(-100,-200,200,400);fallback.endFill();layers.body.addChild(fallback);console.log("Body fallback added, mainContainer scale:",mainContainer.scale.x)}try{console.log("Loading hair texture:",resources.hair[0]);const hairTexture=await PIXI.Texture.fromURL(resources.hair[0]);const hairSprite=new PIXI.Sprite(hairTexture);hairSprite.anchor.set(.5,0);hairSprite.position.set(0,0);hairSprite.scale.set(1);layers.hair.addChild(hairSprite);console.log("Hair sprite loaded successfully")}catch(error){console.error("Failed to load hair texture:",error);const fallback=new PIXI.Graphics;fallback.beginFill(65280);fallback.drawRect(-100,-200,200,400);fallback.endFill();layers.hair.addChild(fallback);console.log("Hair fallback added, mainContainer position:",mainContainer.position)}try{console.log("Loading clothes texture:",resources.clothes[0]);const clothesTexture=await PIXI.Texture.fromURL(resources.clothes[0]);const clothesSprite=new PIXI.Sprite(clothesTexture);clothesSprite.anchor.set(.5,0);clothesSprite.position.set(0,0);clothesSprite.scale.set(1);layers.clothes.addChild(clothesSprite);console.log("Clothes sprite loaded successfully")}catch(error){console.error("Failed to load clothes texture:",error);const fallback=new PIXI.Graphics;fallback.beginFill(255);fallback.drawRect(-100,-200,200,400);fallback.endFill();layers.clothes.addChild(fallback);console.log("Clothes fallback added, mainContainer pivot:",mainContainer.pivot)}updateControlPanelPreviews()}function getDLCItems(){return["./hair/短发.png","./clothes/鲸鱼服装.png","./clothes/女仆装.png","./body/普通表情+黑过膝.png","./body/生气表情+白小腿袜.png","./body/开心表情+白裤袜.png"]}function generateControlPanels(){const panels=["body","clothes","hair"];const dlcItems=getDLCItems();panels.forEach(type=>{const inner=document.querySelector(`#${type}Panel .panel-inner`);const count=resources[type].length;inner.innerHTML="";for(let copy=0;copy<3;copy++){for(let i=0;i<count;i++){const item=document.createElement("div");const resourcePath=resources[type][i];const isDLC=dlcItems.some(dlcPath=>resourcePath.includes(dlcPath.split("/").pop()));item.className="control-item";if(isDLC){item.classList.add("dlc-item")}item.dataset.type=type;item.dataset.index=i;item.style.backgroundImage=`url(${resourcePath})`;if(isDLC){const dlcLabel=document.createElement("span");dlcLabel.className="dlc-label";dlcLabel.textContent="DLC";item.appendChild(dlcLabel)}inner.appendChild(item)}}})}async function updateControlPanelPreviews(){generateControlPanels();setDefaultMiddleSelection()}function setDefaultMiddleSelection(){const panels=["body","clothes","hair"];panels.forEach(type=>{const count=resources[type].length;if(count===0)return;const middleIndex=Math.floor((count-1)/2);const itemWidth=60+16;currentSelection[type]=middleIndex;const panelInner=document.querySelector(`#${type}Panel .panel-inner`);const scrollPosition=count*itemWidth+middleIndex*itemWidth;panelInner.scrollLeft=scrollPosition;const items=document.querySelectorAll(`.control-item[data-type="${type}"]`);items.forEach((item,index)=>{const actualIndex=index%count;item.classList.toggle("active",actualIndex===middleIndex)});loadSelectedResource(type,middleIndex)})}initInfiniteScroll();let isWearingWhaleClothes=false;async function loadSelectedResource(type,index){layers[type].removeChildren();try{const texture=await PIXI.Texture.fromURL(resources[type][index]);const sprite=new PIXI.Sprite(texture);const imgAspect=texture.width/texture.height;const maxWidth=400;const maxHeight=600;let scale=1;if(texture.width>maxWidth||texture.height>maxHeight){const scaleX=maxWidth/texture.width;const scaleY=maxHeight/texture.height;scale=Math.min(scaleX,scaleY)}sprite.anchor.set(.5,0);sprite.position.set(0,0);sprite.scale.set(scale);layers[type].addChild(sprite);if(type==="clothes"){isWearingWhaleClothes=resources.clothes[index].includes("鲸鱼服装.png");if(layers.hair){layers.hair.visible=!isWearingWhaleClothes}}else if(type==="hair"){if(layers.hair){layers.hair.visible=!isWearingWhaleClothes}}}catch(error){console.error(`Failed to load ${type} resource at index ${index}:`,error)}}document.addEventListener("click",async e=>{if(e.target.classList.contains("control-item")){const type=e.target.dataset.type;const clickedIndex=parseInt(e.target.dataset.index);const originalCount=resources[type].length;currentSelection[type]=clickedIndex;document.querySelectorAll(`.control-item[data-type="${type}"]`).forEach(el=>el.classList.remove("active"));document.querySelectorAll(`.control-item[data-type="${type}"]`).forEach((el,idx)=>{const actualIndex=idx%originalCount;if(actualIndex===clickedIndex){el.classList.add("active")}});const panelInner=e.target.closest(".panel-inner");const panel=panelInner.closest(".control-panel");const itemWidth=60+16;const totalWidth=originalCount*itemWidth;const currentPos=panelInner.scrollLeft;const panelWidth=panel.offsetWidth;const centeredPos=clickedIndex*itemWidth+itemWidth/2-panelWidth/2;const positions=[centeredPos+totalWidth,centeredPos,centeredPos+totalWidth*2];const distances=positions.map(pos=>Math.abs(pos-currentPos));const nearestPos=positions[distances.indexOf(Math.min(...distances))];panelInner.scrollTo({left:nearestPos,behavior:"smooth"});loadSelectedResource(type,clickedIndex)}});function randomDressUp(){const types=["body","clothes","hair"];types.forEach(type=>{const count=resources[type].length;if(count>0){const randomIndex=Math.floor(Math.random()*count);currentSelection[type]=randomIndex;loadSelectedResource(type,randomIndex);const items=document.querySelectorAll(`.control-item[data-type="${type}"]`);items.forEach((item,idx)=>{const actualIndex=idx%count;item.classList.toggle("active",actualIndex===randomIndex)});const panelInner=document.querySelector(`#${type}Panel .panel-inner`);const itemWidth=60+16;const totalWidth=count*itemWidth;const centeredPos=randomIndex*itemWidth+itemWidth/2-panelInner.offsetWidth/2;const positions=[centeredPos+totalWidth,centeredPos,centeredPos+totalWidth*2];const distances=positions.map(pos=>Math.abs(pos-panelInner.scrollLeft));const nearestPos=positions[distances.indexOf(Math.min(...distances))];panelInner.scrollTo({left:nearestPos,behavior:"smooth"})}});const btn=document.getElementById("randomBtn");btn.style.transform="scale(0.95)";setTimeout(()=>{btn.style.transform=""},150)}document.addEventListener("DOMContentLoaded",()=>{const randomBtn=document.getElementById("randomBtn");if(randomBtn){randomBtn.addEventListener("click",randomDressUp)}});loadInitialResources();window.addEventListener("resize",()=>{if(originalWidth&&originalHeight){const targetWidth=app.screen.width*.9;const targetHeight=app.screen.height*.8;const scaleX=targetWidth/originalWidth;const scaleY=targetHeight/originalHeight;const currentScale=Math.min(scaleX,scaleY);console.log("Resize target dimensions:",targetWidth,targetHeight,"currentScale:",currentScale);mainContainer.scale.set(currentScale);const bounds=mainContainer.getBounds();mainContainer.pivot.set(bounds.width/2,0);mainContainer.position.set(app.screen.width/2,0)}});function initInfiniteScroll(){const panels=["body","clothes","hair"];panels.forEach(type=>{const panel=document.getElementById(`${type}Panel`);const inner=panel.querySelector(".panel-inner");const itemWidth=60+16;const originalCount=resources[type].length;let isDragging=false;let startX;let scrollLeft;const middleSectionCenter=originalCount*itemWidth+Math.floor(originalCount/2)*itemWidth;inner.scrollLeft=middleSectionCenter;function getScrollPositionForIndex(index){const totalWidth=originalCount*itemWidth;return totalWidth+index*itemWidth}function resetToMiddleSection(){const totalWidth=originalCount*itemWidth;inner.scrollLeft=totalWidth}inner.addEventListener("scroll",()=>{const totalWidth=originalCount*itemWidth;const currentPos=inner.scrollLeft;if(currentPos>=totalWidth*2-itemWidth*2){requestAnimationFrame(()=>{inner.scrollLeft=currentPos-totalWidth})}else if(currentPos<=totalWidth){requestAnimationFrame(()=>{inner.scrollLeft=currentPos+totalWidth})}});panel.addEventListener("mousedown",e=>{isDragging=true;startX=e.pageX-panel.offsetLeft;scrollLeft=inner.scrollLeft;panel.style.cursor="grabbing"});panel.addEventListener("mouseleave",()=>{if(isDragging){isDragging=false;handleDragEnd()}panel.style.cursor="grab"});panel.addEventListener("mouseup",()=>{if(isDragging){isDragging=false;handleDragEnd()}panel.style.cursor="grab"});function handleDragEnd(){const currentPos=inner.scrollLeft;const totalWidth=originalCount*itemWidth;const itemIndex=Math.round(currentPos/itemWidth);const actualIndex=(itemIndex%originalCount+originalCount)%originalCount;if(actualIndex>=0&&actualIndex<originalCount){const container=panel.querySelector(".panel-container");const containerStyle=getComputedStyle(container);const containerRect=container.getBoundingClientRect();const containerPadding=parseFloat(containerStyle.paddingLeft)+parseFloat(containerStyle.paddingRight);const containerWidth=containerRect.width-containerPadding;const itemTotalWidth=76;const centeredPos=actualIndex*itemWidth+itemWidth/2-containerWidth/2;const positions=[centeredPos+totalWidth,centeredPos,centeredPos+totalWidth*2];const distances=positions.map(pos=>Math.abs(pos-currentPos));const nearestPos=positions[distances.indexOf(Math.min(...distances))];inner.scrollTo({left:nearestPos,behavior:"smooth"});const items=document.querySelectorAll(`.control-item[data-type="${type}"]`);items.forEach((item,idx)=>{const idxInOriginal=idx%originalCount;item.classList.toggle("active",idxInOriginal===actualIndex)});currentSelection[type]=actualIndex;loadSelectedResource(type,actualIndex)}}panel.addEventListener("mousemove",e=>{if(!isDragging)return;e.preventDefault();const x=e.pageX-panel.offsetLeft;const walk=(startX-x)*1;inner.scrollLeft=scrollLeft+walk});panel.style.cursor="grab"})}